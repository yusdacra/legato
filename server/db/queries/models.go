// Code generated by sqlc. DO NOT EDIT.

package queries

import (
	"database/sql"
	"encoding/json"
	"time"
)

type AcquiredEmotePack struct {
	PackID uint64 `json:"pack_id"`
	UserID uint64 `json:"user_id"`
}

type Channel struct {
	ChannelID   uint64        `json:"channel_id"`
	GuildID     sql.NullInt64 `json:"guild_id"`
	ChannelName string        `json:"channel_name"`
	Position    string        `json:"position"`
	Category    bool          `json:"category"`
	Isvoice     bool          `json:"isvoice"`
}

type EmotePack struct {
	PackID   uint64 `json:"pack_id"`
	PackName string `json:"pack_name"`
	UserID   uint64 `json:"user_id"`
}

type EmotePackEmote struct {
	PackID    uint64 `json:"pack_id"`
	ImageID   string `json:"image_id"`
	EmoteName string `json:"emote_name"`
}

type FederationNonce struct {
	Nonce      string `json:"nonce"`
	UserID     uint64 `json:"user_id"`
	HomeServer string `json:"home_server"`
}

type File struct {
	FileID      string `json:"file_id"`
	Name        string `json:"name"`
	ContentType string `json:"content_type"`
	Size        int32  `json:"size"`
}

type ForeignUser struct {
	UserID      uint64 `json:"user_id"`
	HomeServer  string `json:"home_server"`
	LocalUserID uint64 `json:"local_user_id"`
}

type Guild struct {
	GuildID    uint64 `json:"guild_id"`
	OwnerID    uint64 `json:"owner_id"`
	GuildName  string `json:"guild_name"`
	PictureUrl string `json:"picture_url"`
}

type GuildList struct {
	UserID     uint64 `json:"user_id"`
	GuildID    uint64 `json:"guild_id"`
	HomeServer string `json:"home_server"`
	Position   string `json:"position"`
}

type GuildMember struct {
	UserID  uint64 `json:"user_id"`
	GuildID uint64 `json:"guild_id"`
}

type Hash struct {
	Hash   []byte `json:"hash"`
	FileID string `json:"file_id"`
}

type Invite struct {
	InviteID     string        `json:"invite_id"`
	Uses         int32         `json:"uses"`
	PossibleUses sql.NullInt32 `json:"possible_uses"`
	GuildID      uint64        `json:"guild_id"`
}

type LocalUser struct {
	UserID   uint64 `json:"user_id"`
	Email    string `json:"email"`
	Password []byte `json:"password"`
}

type Message struct {
	MessageID   uint64          `json:"message_id"`
	GuildID     uint64          `json:"guild_id"`
	ChannelID   uint64          `json:"channel_id"`
	UserID      uint64          `json:"user_id"`
	CreatedAt   time.Time       `json:"created_at"`
	EditedAt    sql.NullTime    `json:"edited_at"`
	Content     string          `json:"content"`
	Embeds      json.RawMessage `json:"embeds"`
	Actions     json.RawMessage `json:"actions"`
	Overrides   []byte          `json:"overrides"`
	ReplyToID   sql.NullInt64   `json:"reply_to_id"`
	Attachments []string        `json:"attachments"`
}

type Permission struct {
	GuildID   uint64          `json:"guild_id"`
	ChannelID sql.NullInt64   `json:"channel_id"`
	RoleID    uint64          `json:"role_id"`
	Nodes     json.RawMessage `json:"nodes"`
}

type Profile struct {
	UserID   uint64         `json:"user_id"`
	Username string         `json:"username"`
	Avatar   sql.NullString `json:"avatar"`
	Status   int16          `json:"status"`
}

type RateLimitWhitelistIp struct {
	Ip string `json:"ip"`
}

type RateLimitWhitelistUser struct {
	UserID uint64 `json:"user_id"`
}

type Role struct {
	GuildID  uint64 `json:"guild_id"`
	RoleID   uint64 `json:"role_id"`
	Name     string `json:"name"`
	Color    int32  `json:"color"`
	Hoist    bool   `json:"hoist"`
	Pingable bool   `json:"pingable"`
	Position string `json:"position"`
}

type RolesMember struct {
	GuildID  uint64 `json:"guild_id"`
	RoleID   uint64 `json:"role_id"`
	MemberID uint64 `json:"member_id"`
}

type Session struct {
	Session    string `json:"session"`
	UserID     uint64 `json:"user_id"`
	Expiration int64  `json:"expiration"`
}

type User struct {
	UserID uint64 `json:"user_id"`
}

type UserMetadatum struct {
	UserID   uint64 `json:"user_id"`
	AppID    string `json:"app_id"`
	Metadata string `json:"metadata"`
}
